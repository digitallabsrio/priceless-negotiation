{
  "course_name": "The Way to Go - Learn Interactively",
  "course_overview": "Go (sometimes called Golang) is one of the most popular languages today, and is a key part of many enterprise tech stacks. Many developers prefer Go to other languages like C++ and Scala because of its memory management model which allows for easier concurrency.\n\nIn this course, you will learn the core constructs and techniques of the language. After going through the basics, you will then learn more advanced Go concepts like error-handling, networking, and templating. You'll learn how to program efficiently in Go by gaining knowledge of common pitfalls and patterns, as well as by building your own applications.",
  "course_folder": "the way to go",
  "course_lessons": [
    "0-origin and evolution of go",
    "1-reasons for developing go",
    "2-characteristics of go",
    "3-test yourself",
    "4-filenames keywords and identifiers",
    "5-import functionality",
    "6-overview of functions",
    "7-overview of data types",
    "8-constants",
    "9-variables",
    "10-scope of variables",
    "11-elementary types",
    "12-operators",
    "13-challenge temperature conversion",
    "14-solution review temperature conversion",
    "15-strings",
    "16-strings and strconv package",
    "17-times and dates",
    "18-pointers",
    "19-quiz deduce the outputs",
    "20-the if else construct",
    "21-testing for errors on functions",
    "22-the switch case construct",
    "23-challenge season of a month",
    "24-solution review season of a month",
    "25-the for construct",
    "26-the for range construct",
    "27-break and continue",
    "28-use of labels goto",
    "29-exercise deduce the outputs",
    "30-introduction to functions",
    "31-parameters and return values",
    "32-challenge multiple return values",
    "33-solution review multiple return values",
    "34-challenge variable number of arguments",
    "35-solution review variable number of arguments",
    "36-defer and tracing",
    "37-built in functions",
    "38-recursive functions",
    "39-challenge compute factorial of a number",
    "40-solution review compute factorial of a number",
    "41-higher order functions",
    "42-challenge filter even and odd numbers",
    "43-solution review filter even and odd numbers",
    "44-closures",
    "45-functions as return variables",
    "46-debugging with closures",
    "47-optimizing programs",
    "48-quiz deduce the outputs",
    "49-declaration and initialization",
    "50-array literals and parameters",
    "51-challenge filling array with loop counter",
    "52-solution review filling array with loop counter",
    "53-challenge finding fibonacci numbers with array",
    "54-solution review finding fibonacci numbers with array",
    "55-slices",
    "56-slices with functions",
    "57-challenge finding fibonacci numbers with slices",
    "58-solution review finding fibonacci numbers with slices",
    "59-multidimensionality",
    "60-bytes and slices",
    "61-the for range construct",
    "62-reslicing",
    "63-copying and appending slices",
    "64-challenge magnify a slice",
    "65-solution review magnify a slice",
    "66-challenge inserting slice in a slice",
    "67-solution review inserting slice in a slice",
    "68-challenge filtering with higher order functions",
    "69-solution review filtering with higher order functions",
    "70-applying strings arrays and slices",
    "71-challenge bubble sort the slice",
    "72-solution review bubble sort the slice",
    "73-challenge reverse a string",
    "74-solution review reverse a string",
    "75-quiz deduce the outputs",
    "76-declaration and initialization",
    "77-existence of key value item",
    "78-the for range construct",
    "79-challenge map the days",
    "80-solution review map the days",
    "81-a slice of maps",
    "82-sorting and inverting a map",
    "83-quiz deduce the outputs",
    "84-overview of the standard library",
    "85-challenge construct a double linked list",
    "86-solution review construct a double linked list",
    "87-the regexp package",
    "88-locking and the sync package",
    "89-accurate computations and the big package",
    "90-custom packages and visibility",
    "91-documenting your packages",
    "92-custom packages folder structure go install and go test",
    "93-using git for distribution",
    "94-external packages projects and libraries",
    "95-installing external packages",
    "96-introduction to struct",
    "97-advanced structs concepts",
    "98-factory method",
    "99-structs with tags",
    "100-anonymous fields and embedded structs",
    "101-challenge anonymous struct",
    "102-solution review anonymous struct",
    "103-introduction to methods",
    "104-methods versus functions",
    "105-challenge coordinates of a point",
    "106-solution review coordinates of a point",
    "107-challenge make a rectangle",
    "108-solution review make a rectangle",
    "109-challenge decide employee salary",
    "110-solution review decide employee salary",
    "111-receivers and methods as pointers and values",
    "112-non exported fields",
    "113-string method and format specifiers",
    "114-methods on embedded types",
    "115-multiple inheritance",
    "116-challenge implement stack data structure",
    "117-solution review implement stack data structure",
    "118-garbage collection and setfinalizer",
    "119-quiz deduce the outputs",
    "120-what is an interface",
    "121-challenge make a simple interface",
    "122-solution review make a simple interface",
    "123-embedded interface and type assertions",
    "124-the type switch",
    "125-challenge advancing the simple interface",
    "126-solution review advancing the simple interface",
    "127-implementation of interfaces",
    "128-sorting with the sorter interface",
    "129-challenge advancing the shapes analysis",
    "130-solution review advancing the shapes analysis",
    "131-challenge sort people with sorter interface",
    "132-solution review sort people with sorter interface",
    "133-reading and writing",
    "134-empty interface",
    "135-challenge implement miner interface",
    "136-solution review implement miner interface",
    "137-the reflect package",
    "138-printf and reflection",
    "139-interfaces and dynamic typing",
    "140-structs collections and higher order functions",
    "141-challenge make a stack with variable internal types",
    "142-solution review make a stack with variable internal types",
    "143-the object orientation in go",
    "144-quiz deduce the outputs",
    "145-reading input from the user",
    "146-challenge analyzing input from keyboard",
    "147-solution review analyzing input from keyboard",
    "148-reading from a file",
    "149-writing to a file",
    "150-challenge read csv file",
    "151-solution review read csv file",
    "152-challenge writing to a wiki page",
    "153-solution review writing to a wiki page",
    "154-copying files",
    "155-reading arguments from the command line",
    "156-reading files with a buffer",
    "157-reading and writing files with slices",
    "158-scanning inputs",
    "159-a practical example of interfaces",
    "160-the json data format",
    "161-decoding with json",
    "162-the xml data format",
    "163-data transport through gob",
    "164-challenge decode the contents",
    "165-solution review decode the contents",
    "166-cryptography with go",
    "167-exercise deduce the outputs",
    "168-error handling",
    "169-run time exceptions and panic",
    "170-recover",
    "171-error handling and panicking in a user defined package",
    "172-error handling scheme with closures",
    "173-challenge generate panic from division by 0",
    "174-solution review generate panic from division by 0",
    "175-starting an external command or program",
    "176-testing and benchmarking in go",
    "177-testing a concrete example",
    "178-using table driven tests",
    "179-investigating performance",
    "180-exercise deduce the outputs",
    "181-handling concurrency and parallelism with go",
    "182-implementing goroutines",
    "183-introduction to channels",
    "184-synchronous and asynchronous communication",
    "185-challenge demonstrate the blocking nature",
    "186-solution review demonstrate the blocking nature",
    "187-semaphore pattern",
    "188-channel factory and producer consumer pattern",
    "189-challenge summing the integers",
    "190-solution review summing the integers",
    "191-channel directionality",
    "192-synchronization of goroutines",
    "193-switching between goroutines",
    "194-challenge devise random bit generator",
    "195-solution review devise random bit generator",
    "196-challenge map polar points to cartesian points",
    "197-solution review map polar points to cartesian points",
    "198-channels timeouts and tickers",
    "199-using recover with goroutines",
    "200-tasks and worker processes",
    "201-implementing a lazy generator",
    "202-anonymous closure",
    "203-implementing futures",
    "204-multiplexing",
    "205-limiting the number of requests",
    "206-chaining and parallelizing computation",
    "207-the leaky bucket algorithm",
    "208-benchmarking accessing and listening",
    "209-exercise deduce the outputs",
    "210-a tcp server",
    "211-a simple web server",
    "212-polling websites and reading web page",
    "213-writing a simple web application",
    "214-challenge web application for statistics",
    "215-solution review web application for statistics",
    "216-making a web application robust",
    "217-writing web application with templates",
    "218-exploring the template package",
    "219-challenge web application for serving guests",
    "220-solution review web application for serving guests",
    "221-an elaborate web server",
    "222-remote procedure calls with rpc",
    "223-sending mails with smtp",
    "224-go in the cloud",
    "225-regular mistakes and suggestions",
    "226-highlights from the previous chapters",
    "227-the comma ok pattern",
    "228-the defer pattern",
    "229-visibility and operator patterns",
    "230-strings arrays and slices",
    "231-structs interfaces and maps",
    "232-functions and files",
    "233-goroutines and networking",
    "234-suggestions and considerations",
    "235-introduction",
    "236-setting up the structure of application",
    "237-our user interface",
    "238-persistent storage with gob",
    "239-using goroutines for performance",
    "240-persistent storage with json",
    "241-enhancements",
    "242-platforms and architectures",
    "243-installing go and the go tools chain in binary format",
    "244-installing go from source",
    "245-go work environment",
    "246-basic requirements for a go environment",
    "247-editors and integrated development environments",
    "248-debugging",
    "249-formatting the code",
    "250-building and running go programs",
    "251-searching for help and documenting the code",
    "252-tools and go s performance",
    "253-interaction with c and cplusplus",
    "254-helpful resources"
  ],
  "repo_name": "priceless-negotiation"
}
